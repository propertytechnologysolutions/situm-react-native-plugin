# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

parameters:
  - name: system
    type: string
    values:
      - "ubuntu-latest"        
      - "macOS-11"
  - name: XAPIEMAIL
    type: string
    displayName: X-API-EMAIL
  - name: XAPIKEY
    type: string
    displayName: X-API-KEY
  - name: BUILDINGID
    type: string
  - name: FLOORID
    type: string

variables:
  - group: Passwords

resources:
  repositories:
  - repository: sys_kubernetes_templates
    type: bitbucket
    endpoint: Bitbucket - sistemas
    name: situm/sys-kubernetes-templates.git

jobs: 
- job:
  displayName: Build ${{ parameters.system }}
  pool:
    vmImage: ${{ parameters.system }}
  steps:
  - checkout: self
    fetchDepth: 1
    fetchTags: false
    displayName: Clone repository

  - bash: |

      echo -e "\n[+] Install plugin dependencies\n"
      npm install

      echo -e "\n[+] Install example dependencies\n"
      cd example
      npm install

    displayName: Install plugin dependencies

  - bash: |

      if [ "${{ parameters.system }}" == "*macOS*" ];then
          echo -e "\n[+] Install gnu-sed\n"
          brew install gnu-sed
          export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
      fi

      echo -e "\n[+] Variables to set:"
      echo -e "\t[+] X-API-EMAIL: ${{ parameters.XAPIEMAIL }}"
      echo -e "\t[+] BUILDINGID: ${{ parameters.BUILDINGID }}"
      echo -e "\t[+] FLOORID: ${{ parameters.FLOORID }}"

      echo "export const SITUM_EMAIL = '${{ parameters.XAPIEMAIL }}';" > example/src/situm.tsx
      echo "export const SITUM_API_KEY = '${{ parameters.XAPIKEY }}';" >> example/src/situm.tsx
      echo "export const SITUM_BUILDING_ID = '${{ parameters.BUILDINGID }}';" >> example/src/situm.tsx
      echo "export const SITUM_FLOOR_ID = '${{ parameters.FLOORID }}';" >> example/src/situm.tsx
      

    displayName: Configure credentials
  
  - ${{ if contains(parameters.system, 'macOS') }}:

    - task: DownloadSecureFile@1
      name: api_key
      inputs:
        secureFile: api_key.json

    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: AppleCert23.p12
        
    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: Distributor.p12
  
    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 6eb21d22-4cb9-44aa-b81f-884023fb8d7f.mobileprovision
        removeProfile: true
    
    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: PipelinesProfile.mobileprovision
        removeProfile: true
  
    - bash: |
        echo -e "\n[+] Install iOS example dependencies\n"
        cd example/ios
        pod install
      displayName: Install iOS example dependencies

    - bash: |

        cd example/ios/fastlane

        echo -e "\n[+] Setting Apple connection options"

        cp $(api_key.secureFilePath) .

        echo -e "\n[+] Install fastlane \n"
        gem install fastlane

        echo -e "\n[+] Build example with fastlane \n"
        fastlane ios beta

      displayName: Build iOS example 
  
  
  - ${{ if contains(parameters.system, 'ubuntu') }}:

    - bash: |
 
        echo -e "\n[+] Build Android example \n"
        
        react-native bundle --platform android --dev false --entry-file example/index.js --bundle-output example/android/app/src/main/assets/index.android.bundle --assets-dest example/android/app/src/main/res

        cd example/android

        ./gradlew assembleDebug


        
      displayName: Build Android dependencies


    - bash: |
        folder="/Documentos%20compartidos/Desarrollo/Apks/RNSDK"
        echo -e "\n[+] Create folder to APK\n"

        npm i -g @pnp/cli-microsoft365

        echo -e "\n[+] Login in Sharepoint \n"
        m365 login --authType password --userName $(sharepoint_user)  --password $(sharepoint_pass)

        echo -e "\n[+] Create folder $folder/$(Build.BuildNumber)"
        m365 spo folder add -p $folder -u https://sistemassitum.sharepoint.com/sites/producteng --name $(Build.BuildNumber)

        echo -e "\n[+] Upload APK to $folder/$(Build.BuildNumber)\n"
        cd example/android/app/build/outputs/apk/debug
        ls -lahrt
        m365 spo file add -p app-debug.apk -u https://sistemassitum.sharepoint.com/sites/producteng -f $folder/$(Build.BuildNumber)

      displayName: Upload APK
