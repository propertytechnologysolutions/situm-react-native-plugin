parameters:
  - name: system
    type: string
  - name: XAPIEMAIL
    type: string
  - name: XAPIKEY
    type: string
  - name: BUILDINGID
    type: string
  - name: FLOORID
    type: string
  - name: DASHBOARD_URL
    type: string
steps:
 - checkout: self
   fetchDepth: 1
   fetchTags: false
   displayName: Clone repository

 - task: NodeTool@0
   inputs:
     versionSource: 'spec' # 'spec' | 'fromFile'. Required. Source of version. Default: spec.
     versionSpec: $(nodeVersion)

 - ${{ if ne(variables['Build.Reason'],'manual') }}:
   - bash: |
        echo "##vso[task.setvariable variable=XAPIKEY]$(echo $(XAPIKEY_EXAMPLES))"
        echo "##vso[task.setvariable variable=XAPIEMAIL]$(echo $(XAPIEMAIL_EXAMPLES))"
        echo "##vso[task.setvariable variable=BUILDINGID]$(echo $(BUILDING_ID_EXAMPLES))"
        echo "##vso[task.setvariable variable=FLOORID]$(echo $(FLOOR_ID_EXAMPLES))"
        echo "##vso[task.setvariable variable=DASHBOARD_URL]$(echo 'https://dashboard.situm.com')"

        echo -e "\n[!] I'm a shy step so I don't show any information. You'll see my work in the Configure Credentials step"
     displayName: Configure Automatic run Vars

 - ${{ if eq(variables['Build.Reason'],'manual') }}:
   - bash: |
        echo "##vso[task.setvariable variable=XAPIKEY]$(echo ${{parameters.XAPIKEY}})"
        echo "##vso[task.setvariable variable=XAPIEMAIL]$(echo ${{ parameters.XAPIEMAIL}})"
        echo "##vso[task.setvariable variable=BUILDINGID]$(echo ${{ parameters.BUILDINGID}})"
        echo "##vso[task.setvariable variable=FLOORID]$(echo ${{ parameters.FLOORID}})"
        echo "##vso[task.setvariable variable=DASHBOARD_URL]$(echo ${{ parameters.DASHBOARD_URL }})"

        echo -e "\n[!] I'm a shy step so I don't show any information. You'll see my work in the Configure Credentials step"
     displayName: Configure Manual run Vars

 - bash: |

     echo -e "\n[+] Installing NPM version $(npmVersion)\n"
     npm install -g $(npmVersion)


     echo -e "\n[+] Install plugin dependencies\n"
     npm install

     echo -e "\n[+] Install example dependencies\n"
     cd example
     npm install

   displayName: Install plugin dependencies

 - bash: |

     export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
     pluginVersion=$(grep version package.json | awk -F"\"" '{print $4}')
     echo "##vso[task.setvariable variable=pluginVersion]$(echo $pluginVersion)"

     echo -e "\n[+] Variables to set:"
     echo -e "\t[+] X-API-EMAIL: ${{ parameters.XAPIEMAIL }}"
     echo -e "\t[+] BUILDINGID: ${{ parameters.BUILDINGID }}"
     echo -e "\t[+] FLOORID: ${{ parameters.FLOORID }}"
     echo -e "\t[+] DASHBOARD_URL: ${{ parameters.DASHBOARD_URL }}"
     echo -e "\t[+] Plugin Version used: $pluginVersion"

     echo "export const SITUM_EMAIL = '${{ parameters.XAPIEMAIL }}';" > example/src/situm.tsx
     echo "export const SITUM_API_KEY = '${{ parameters.XAPIKEY }}';" >> example/src/situm.tsx
     echo "export const SITUM_BUILDING_ID = '${{ parameters.BUILDINGID }}';" >> example/src/situm.tsx
     echo "export const SITUM_FLOOR_ID = '${{ parameters.FLOORID }}';" >> example/src/situm.tsx
     echo "export const SITUM_DASHBOARD_URL = '${{ parameters.DASHBOARD_URL }}';"  >> example/src/situm.tsx
     
     sed -i "s/HERE_GOES_GOOGLE_MAPS_API_KEY/$(MAPS_APIKEY_EXAMPLE)/" example/ios/example/AppDelegate.mm
     sed -i "s/HERE_GOES_GOOGLE_MAPS_API_KEY/$(MAPS_APIKEY_EXAMPLE)/" example/android/app/src/main/AndroidManifest.xml

   displayName: Configure credentials
 

